{"version":3,"sources":["utils/_DATA.js","utils/API.js","reducers/loggedin.js","reducers/register.js","reducers/index.js","reducers/recommend.js","middleware/index.js","store/index.js","constants/index.js","components/generic/Textbox.js","components/generic/Password.js","components/generic/ErrorMessage.js","components/generic/Button.js","actions/loggedin.js","components/Login.js","actions/register.js","components/Register.js","App.js","serviceWorker.js","index.js"],"names":["users","oseagbadu","username","email","password","name","id","friends","James","eliseagbadu","Camille","_getUsers","Promise","res","rej","setTimeout","_saveUsers","apicall","a","fetch","movies","json","moviesData","getAllUsers","allUsers","saveNewUser","newUser","loggedin","state","action","type","SET_LOGGED_IN_USER","loggediduser","register","REGISTER","combineReducers","recommend","ADDFRIEND","_","assign","friend","RECOMMEND","newFriendList","newList","key","indexOf","movie","splice","push","REMOVEFRIEND","applyMiddleware","thunk","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","middleware","Textbox","display","value","userinput","error","className","length","placeholder","onChange","Password","ErrorMessage","Btn","click","load","onClick","dispatch","Login","props","_isMounted","getUserInput","e","setState","target","userLogin","isMounted","count","loginTimer","setInterval","clearInterval","prevState","loading","then","user","userRedirect","invalid","banners","this","to","pathname","banner","style","color","textDecoration","Component","connect","currentuser","Register","createUser","fullname","userid","Math","floor","random","result","console","log","cpassword","Home","lazy","Recommend","App","fallback","exact","path","component","render","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f2cb7a38.chunk.js","sourcesContent":["let users = {\n  oseagbadu: {\n    username: \"oseagbadu\",\n    email: \"osepro@gmail.com\",\n    password: \"1234\",\n    name: \"Ose Agbadu\",\n    id: 1234,\n    friends: { James: [\"Ratched\"] },\n  },\n  eliseagbadu: {\n    username: \"eliseagbadu\",\n    email: \"elise@email.com\",\n    password: \"1234\",\n    name: \"Elise Agbadu\",\n    id: 2341,\n    friends: { Camille: [\"Ratched\"] },\n  },\n};\n\nexport function _getUsers() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...users }), 1000);\n  });\n}\n\nexport function _saveUsers(name, username, id, email, password) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [username]: {\n          username: username,\n          email: email,\n          password: password,\n          name: name,\n          id: id,\n          friends: {},\n        },\n      };\n      res({ ...users });\n    }, 500);\n  });\n}\n","import { _getUsers, _saveUsers } from \"./_DATA\";\n\nexport async function apicall(id) {\n  const movies = await fetch(\n    `https://api.themoviedb.org/3/discover/tv?api_key=acd45b564463fb4a98952313a103fed2&with_networks=${id}`\n  );\n  const moviesData = await movies.json();\n  return moviesData;\n}\n\nexport async function getAllUsers() {\n  const allUsers = await _getUsers();\n  return allUsers;\n}\n\nexport async function saveNewUser(name, username, id, email, password) {\n  const newUser = await _saveUsers(name, username, id, email, password);\n  return newUser;\n}\n","import { SET_LOGGED_IN_USER } from \"../constants\";\n\nfunction loggedin(state = \"\", action) {\n  switch (action.type) {\n    case SET_LOGGED_IN_USER:\n      state = action.loggediduser;\n      return state;\n    default:\n      return state;\n  }\n}\n\nexport default loggedin;\n","import { REGISTER } from \"../constants\";\n\nfunction register(state = {}, action) {\n  switch (action.type) {\n    case REGISTER:\n      return {\n        ...state,\n        [action.username]: {\n          username: action.username,\n          email: action.email,\n          password: action.password,\n          name: action.name,\n          id: action.id,\n          friends: {},\n        },\n      };\n    default:\n      return state;\n  }\n}\nexport default register;\n","import { combineReducers } from \"redux\";\nimport loggedin from \"./loggedin\";\nimport recommend from \"./recommend\";\nimport register from \"./register\";\n\nexport default combineReducers({\n  loggedin,\n  recommend,\n  register,\n});\n","import { ADDFRIEND, REMOVEFRIEND, RECOMMEND } from \"../constants/\";\nimport _ from \"lodash\";\n\nexport default function recommend(state = {}, action) {\n  switch (action.type) {\n    case ADDFRIEND:\n      return _.assign({}, state, {\n        [action.friend]: { name: action.friend, id: action.id, movies: [] },\n      });\n    case RECOMMEND:\n      const newFriendList = {};\n      let newList = state[action.name];\n      if (newList.movies.indexOf(action.movie) > -1) {\n        newList.movies.splice(newList.movies.indexOf(action.movie), 1);\n      } else {\n        newList.movies.push(action.movie);\n      }\n      for (let key in state) {\n        if (key !== action.name) {\n          newFriendList[key] = state[key];\n        }\n      }\n      newFriendList[action.name] = newList;\n      return _.assign({}, state, newFriendList);\n    case REMOVEFRIEND:\n      delete state[action.friend];\n      return { ...state };\n    default:\n      return state;\n  }\n}\n","import thunk from \"redux-thunk\";\nimport { applyMiddleware } from \"redux\";\n\nexport default applyMiddleware(thunk);\n","import { createStore, compose } from \"redux\";\nimport reducer from \"../reducers\";\nimport middleware from \"../middleware\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancer(middleware));\n\nexport default store;\n","export const ADDFRIEND = \"ADDFRIEND\";\nexport const REMOVEFRIEND = \"REMOVEFRIEND\";\nexport const RECOMMEND = \"RECOMMEND\";\nexport const SET_LOGGED_IN_USER = \"SET_LOGGED_IN_USER\";\nexport const REGISTER = \"REGISTER\";\n","import { values } from \"lodash\";\nimport React, { Fragment } from \"react\";\nimport \"../css/Generic.css\";\n\nconst Textbox = ({ display, value, userinput, name, error }) => {\n  return (\n    <Fragment>\n      <input\n        type=\"Text\"\n        className={`textInput ${error || value.length > 0 ? \"\" : \"error\"}`}\n        name={name}\n        placeholder={display}\n        value={value}\n        onChange={userinput}\n      />\n    </Fragment>\n  );\n};\n\nexport default Textbox;\n","import React, { Fragment } from \"react\";\nimport \"../css/Generic.css\";\nconst Password = ({ display, value, userinput, name, error }) => {\n  return (\n    <Fragment>\n      <input\n        type=\"password\"\n        className={`textInput ${error || value.length > 0 ? \"\" : \"error\"}`}\n        name={name}\n        placeholder={display}\n        value={value}\n        onChange={userinput}\n      />\n    </Fragment>\n  );\n};\n\nexport default Password;\n","import React, { Fragment } from \"react\";\nimport \"../css/Generic.css\";\n\nconst ErrorMessage = ({ display }) => {\n  return (\n    <Fragment>\n      <p className=\"errorMsg\">{display}</p>\n    </Fragment>\n  );\n};\n\nexport default ErrorMessage;\n","import React, { Fragment } from \"react\";\nimport \"../css/Generic.css\";\n\nconst Btn = ({ display, click, load }) => {\n  return (\n    <Fragment>\n      <button className=\"btnSubmit\" onClick={click}>\n        {display}\n        {load.length > 0 ? load : \"\"}\n      </button>\n    </Fragment>\n  );\n};\n\nexport default Btn;\n","import { SET_LOGGED_IN_USER } from \"../constants\";\n\nfunction loggedin(loggediduser) {\n  return (dispatch) => {\n    dispatch({\n      type: SET_LOGGED_IN_USER,\n      loggediduser,\n    });\n  };\n}\n\nexport default loggedin;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { getAllUsers, apicall } from \"../utils/API\";\nimport \"./css/Login.css\";\nimport Textbox from \"./generic/Textbox\";\nimport Password from \"./generic/Password\";\nimport ErrorMessage from \"./generic/ErrorMessage\";\nimport Btn from \"./generic/Button\";\nimport loggedin from \"../actions/loggedin\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Link } from \"react-router-dom\";\n\nclass Login extends Component {\n  _isMounted = false;\n  constructor(props) {\n    super(props);\n    this.state = {\n      banners: [],\n      username: \"\",\n      password: \"\",\n      userRedirect: false,\n      loading: \"\",\n      isMounted: false,\n      error: true,\n      invalid: false,\n    };\n  }\n\n  getUserInput = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      error: true,\n      invalid: false,\n    });\n  };\n\n  userLogin = () => {\n    const { username, password, isMounted } = this.state;\n    const { dispatch } = this.props;\n\n    if (username.length && password.length) {\n      if (isMounted) {\n        let count = 0;\n        let loginTimer = setInterval(() => {\n          if (count > 5) {\n            clearInterval(loginTimer);\n          }\n          count++;\n          this.setState((prevState) => ({\n            loading: prevState.loading + \".\",\n          }));\n        }, 200);\n      }\n\n      if (username.length > 0 && password.length > 0) {\n        getAllUsers().then((user) => {\n          if (\n            user[username][\"username\"] === username &&\n            user[username][\"password\"] === password\n          ) {\n            dispatch(loggedin(username));\n            this.setState({ userRedirect: true });\n          } else {\n            this.setState({ invalid: true, password: \"\", loading: \"\" });\n          }\n        });\n      }\n    } else {\n      this.setState({\n        error: false,\n      });\n    }\n  };\n\n  componentDidMount() {\n    //getAllUsers().then((user) => console.log(user));\n    this.setState({ isMounted: true });\n    apicall(213).then((res) => this.setState({ banners: res[\"results\"] }));\n  }\n  componentWillUnmount() {\n    this.setState({ isMounted: false });\n  }\n  render() {\n    const {\n      username,\n      password,\n      userRedirect,\n      banners,\n      loading,\n      error,\n      invalid,\n    } = this.state;\n    if (userRedirect === true) {\n      return (\n        <Redirect to={{ pathname: \"/browse\", state: { banner: banners } }} />\n      );\n    }\n\n    return (\n      <div className=\"mainDiv\">\n        <div className=\"mainContent\">\n          <p className=\"trailerHeader\">\n            <span className=\"movieHeader\">M</span>ovie Trailers\n          </p>\n          {invalid && <ErrorMessage display={\"Invalid username/password\"} />}\n          <Textbox\n            display={\"username\"}\n            name={\"username\"}\n            value={username}\n            error={error}\n            userinput={this.getUserInput}\n          />\n          <Password\n            display={\"password\"}\n            name={\"password\"}\n            value={password}\n            error={error}\n            userinput={this.getUserInput}\n          />\n          <Btn display={\"Login\"} load={loading} click={this.userLogin} />\n          <Link\n            to={{\n              pathname: \"/register\",\n            }}\n            style={{ color: \"#ffffff\", textDecoration: \"none\" }}\n          >\n            {\"Have no account register\"}\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    currentuser: state.loggedin,\n  };\n};\n\nexport default connect(mapStateToProps)(Login);\n","import { REGISTER } from \"../constants\";\n\nfunction register(name, username, id, email, password) {\n  return (dispatch) => {\n    dispatch({\n      type: REGISTER,\n      name,\n      username,\n      id,\n      email,\n      password,\n    });\n  };\n}\n\nexport default register;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { getAllUsers, apicall, saveNewUser } from \"../utils/API\";\nimport \"./css/Login.css\";\nimport Textbox from \"./generic/Textbox\";\nimport Password from \"./generic/Password\";\nimport Btn from \"./generic/Button\";\nimport register from \"../actions/register\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Link } from \"react-router-dom\";\n\nclass Register extends Component {\n  _isMounted = false;\n  constructor(props) {\n    super(props);\n    this.state = {\n      banners: [],\n      username: \"\",\n      password: \"\",\n      fullname: \"\",\n      cpassword: \"\",\n      userRedirect: false,\n      loading: \"\",\n      isMounted: false,\n      error: true,\n      email: \"\",\n    };\n  }\n\n  getUserInput = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      error: true,\n    });\n  };\n\n  createUser = () => {\n    const { username, password, isMounted, fullname, email } = this.state;\n    const { dispatch } = this.props;\n\n    if (username.length && password.length) {\n      if (isMounted) {\n        let count = 0;\n        let loginTimer = setInterval(() => {\n          if (count > 5) {\n            clearInterval(loginTimer);\n          }\n          count++;\n          this.setState((prevState) => ({\n            loading: prevState.loading + \".\",\n          }));\n        }, 200);\n      }\n\n      if (username.length > 0 && password.length > 0) {\n        const userid = Math.floor(Math.random() * 1267);\n        saveNewUser(\n          fullname,\n          username,\n          userid,\n          email,\n          password\n        ).then((result) => console.log(result));\n        dispatch(register(fullname, username, userid, email, password));\n        this.setState({\n          username: \"\",\n          password: \"\",\n          cpassword: \"\",\n          fullname: \"\",\n          email: \"\",\n          loading: \"\",\n        });\n      }\n    } else {\n      this.setState({\n        error: false,\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.setState({ isMounted: true });\n    apicall(213).then((res) => this.setState({ banners: res[\"results\"] }));\n  }\n  componentWillUnmount() {\n    this.setState({ isMounted: false });\n  }\n  render() {\n    const {\n      username,\n      password,\n      userRedirect,\n      banners,\n      loading,\n      fullname,\n      cpassword,\n      email,\n      error,\n    } = this.state;\n    if (userRedirect === true) {\n      return (\n        <Redirect to={{ pathname: \"/browse\", state: { banner: banners } }} />\n      );\n    }\n\n    return (\n      <div className=\"mainDiv\">\n        <div className=\"mainContent\">\n          <p className=\"trailerHeader\">\n            <span className=\"movieHeader\">M</span>ovie Trailers\n          </p>\n          <Textbox\n            display={\"fullname\"}\n            name={\"fullname\"}\n            value={fullname}\n            error={error}\n            userinput={this.getUserInput}\n          />\n          <Textbox\n            display={\"username\"}\n            name={\"username\"}\n            value={username}\n            error={error}\n            userinput={this.getUserInput}\n          />\n          <Textbox\n            display={\"email\"}\n            name={\"email\"}\n            value={email}\n            error={error}\n            userinput={this.getUserInput}\n          />\n          <Password\n            display={\"password\"}\n            name={\"password\"}\n            value={password}\n            error={error}\n            userinput={this.getUserInput}\n          />\n          <Password\n            display={\"confirm password\"}\n            name={\"cpassword\"}\n            value={cpassword}\n            error={error}\n            userinput={this.getUserInput}\n          />\n          <Btn\n            display={\"Create Account\"}\n            load={loading}\n            click={this.createUser}\n          />\n          <Link\n            to={{\n              pathname: \"/\",\n            }}\n            style={{ color: \"#ffffff\", textDecoration: \"none\" }}\n          >\n            {\"Have account Login\"}\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    currentuser: state.loggedin,\n  };\n};\n\nexport default connect(mapStateToProps)(Register);\n","import React, { Suspense, lazy } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport \"./App.css\";\n\nconst Home = lazy(() => import(\"./components/Home\"));\nconst Recommend = lazy(() => import(\"./components/Recommend\"));\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Suspense fallback={<div>Loading...</div>}>\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/browse\" component={Home} />\n        <Route\n          exact\n          path=\"/recommend\"\n          render={(props) => <Recommend {...props} />}\n        >\n          <Recommend />\n        </Route>\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"../src/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}