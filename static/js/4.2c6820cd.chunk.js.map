{"version":3,"sources":["components/Notification.js","components/MoviesList.js","components/Nav.js","components/Banner.js","components/Home.js"],"names":["Notification","props","className","itemcls","message","opts","height","width","playerVars","autoplay","MoviesList","showDisplay","status","setState","active","seconds","endTimer","setInterval","clearInterval","handlePlaying","movie","state","trailerURL","videoclass","playing","movieTrailer","name","then","url","URLParams","URLSearchParams","URL","search","prevState","get","movieName","movieDetails","overview","movieRating","vote_average","movieTotal","vote_count","catch","error","movies","category","this","apicall","res","length","showItem","map","index","key","onClick","poster_path","src","alt","id","to","pathname","videoId","Component","Nav","Banner","style","backgroundImage","banners","bannerDisplay","backdrop_path","details","defaultProps","Home","trunDetails","substring","playOnMouseOver","start","play","console","log","banner","location","features","slice","Math","floor","random","currentuser","feature","onMouseEnter","connect","loggedin"],"mappings":"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","file":"static/js/4.2c6820cd.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./css//Notification.css\";\n\nconst Notification = (props) => {\n  return <div className={`${props.itemcls} ${\"error\"}`}>{props.message}</div>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import React, { Component, Fragment } from \"react\";\nimport _ from \"lodash\";\nimport { apicall } from \"../utils/API\";\nimport PropTypes from \"prop-types\";\nimport \"./css//MoviesList.css\";\nimport YouTube from \"react-youtube\";\nimport Notification from \"./Notification\";\nimport movieTrailer from \"movie-trailer\";\nimport { Link } from \"react-router-dom\";\nconst baseURL = \"https://image.tmdb.org/t/p/original/\";\n\nconst opts = {\n  height: \"390\",\n  width: \"900\",\n  playerVars: { autoplay: 1 },\n};\n\nclass MoviesList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: [],\n      playing: false,\n      videoclass: \"\",\n      trailerURL: \"\",\n      movieName: \"\",\n      movieDetails: \"\",\n      movieRating: \"\",\n      movieTotal: \"\",\n      active: false,\n      message: \"\",\n      status: true,\n    };\n  }\n  showDisplay = (message, status) => {\n    this.setState({\n      message,\n      active: true,\n      status,\n    });\n    let seconds = 0;\n    const endTimer = setInterval(() => {\n      seconds += 10;\n      if (seconds > 2000) {\n        this.setState({\n          active: false,\n          message: \"\",\n        });\n        clearInterval(endTimer);\n      }\n    }, 10);\n  };\n\n  handlePlaying = (movie) => {\n    const { trailerURL } = this.state;\n    if (trailerURL) {\n      this.setState({\n        trailerURL: \"\",\n        videoclass: \"\",\n        playing: false,\n      });\n    } else {\n      movieTrailer(movie?.name)\n        .then((url) => {\n          const URLParams = new URLSearchParams(new URL(url).search);\n          this.setState((prevState) => ({\n            trailerURL: URLParams.get(\"v\"),\n            playing: !prevState.playing,\n            videoclass: \"playingVideo\",\n            movieName: movie.name,\n            movieDetails: movie.overview,\n            movieRating: movie.vote_average,\n            movieTotal: movie.vote_count,\n          }));\n        })\n        .catch((error) =>\n          this.showDisplay(\"Movie trailer currently not available\", true)\n        );\n    }\n  };\n\n  componentDidMount() {\n    const { category } = this.props;\n    apicall(category).then((res) => this.setState({ movies: res[\"results\"] }));\n  }\n  render() {\n    const {\n      movies,\n      playing,\n      videoclass,\n      trailerURL,\n      movieName,\n      movieDetails,\n      movieRating,\n      movieTotal,\n      message,\n      active,\n      status,\n    } = this.state;\n\n    return (\n      <Fragment>\n        {message.length > 0 && (\n          <Notification\n            message={message}\n            showItem={active ? \"fadeInHome\" : \"fadeOut\"}\n            status={status ? \"success\" : \"error\"}\n            itemcls={\"fadeInHome\"}\n          />\n        )}\n        <div className=\"movieDisplay\">\n          {movies.map((movie, index) => (\n            <div\n              key={index}\n              className=\"movieItem\"\n              onClick={() => this.handlePlaying(movie)}\n            >\n              {movie.poster_path ? (\n                <img src={`${baseURL}${movie.poster_path}`} alt={movie.name} />\n              ) : (\n                \"\"\n              )}\n            </div>\n          ))}\n        </div>\n        {playing && (\n          <div id=\"videoplaying\" className={videoclass}>\n            <div className=\"videoplayindDetails\">\n              <h1 className=\"movieTitle\">{movieName}</h1>\n              <p className=\"movieDetails\">{movieDetails}</p>\n              <p className=\"votes\">\n                {movieRating}/10 out of {movieTotal} votes\n              </p>\n              <Link\n                to={{\n                  pathname: \"/recommend\",\n                  state: {\n                    movieName: movieName,\n                    movieDetails: movieDetails,\n                    movieRating: movieRating,\n                    movieTotal: movieTotal,\n                  },\n                }}\n              >\n                <button className=\"recommendActBtn\">Recommend</button>\n              </Link>\n            </div>\n            <div className=\"videoplayinCurr\">\n              {<YouTube videoId={trailerURL} opts={opts} />}\n            </div>\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nMoviesList.propTypes = {\n  category: PropTypes.number,\n};\n\nexport default MoviesList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./css/Nav.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Nav = (props) => {\n  return (\n    <div className=\"topMenu\">\n      <div className=\"titleDiv\">\n        <span className=\"movieHeader\">M</span>ovie Trailers\n      </div>\n      <div className=\"menuDiv\"></div>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './css/Banner.css';\nimport { Link } from 'react-router-dom';\n\nconst baseURL = \"https://image.tmdb.org/t/p/original\";\n\nconst Banner = (props) => {\n\treturn (\n\t\t<header className=\"mainBanner\" style={{\n\t\t\tbackgroundImage: `url(${baseURL}${props.banners[props.bannerDisplay]?.backdrop_path})`\n\t\t}}>\n\t\t\t<div className=\"mainDetails\">\n\t\t\t\t<h1 className=\"bannerTitle\">{props.banners[props.bannerDisplay]?.name}</h1>\n\t\t\t\t<div className=\"homeBtnContainer\">\n\t\t\t\t\t<button className=\"homeActBtn\">Play</button>\n\t\t\t\t\t<button className=\"homeActBtn\">My List</button>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\tpathname: '/recommend',\n\t\t\t\t\t\t\tstate: { movieName: props.banners[props.bannerDisplay]?.name, movieDetails: props.details }\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<button className=\"homeActBtn\">Recommend</button>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<p className=\"details\">{props.details}</p>\n\t\t\t</div>\n\t\t\t<div className=\"mainBannerFade\" />\n\t\t</header>\n\t)\n}\n\nBanner.propTypes = {\n\tbanners: PropTypes.array.isRequired,\n\tbannerDisplay: PropTypes.number.isRequired,\n\tdetails: PropTypes.string.isRequired,\n}\n\nBanner.defaultProps = {\n\tbanners: [],\n\tbannerDisplay: 0,\n\tdetails: '',\n}\nexport default Banner;","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { apicall } from \"../utils/API\";\nimport \"./css/Home.css\";\nimport MoviesList from \"./MoviesList\";\nimport Nav from \"./Nav\";\nimport Banner from \"./Banner\";\nimport movieTrailer from \"movie-trailer\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nconst baseURL = \"https://image.tmdb.org/t/p/original\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      banners: [],\n      trailerURL: \"\",\n    };\n  }\n  trunDetails = (details) => {\n    return details?.substring(0, 200);\n  };\n  playOnMouseOver = () => {\n    let start = 0;\n    let play = setInterval(() => {\n      start += 1;\n      if (start === 100) {\n        clearInterval(play);\n      }\n      console.log(start);\n    }, 10);\n    console.log(start);\n  };\n  handlePlaying = (movie) => {\n    const { trailerURL } = this.state;\n    if (trailerURL) {\n      this.setState({\n        trailerURL: \"\",\n      });\n    } else {\n      movieTrailer(movie?.name)\n        .then((url) => {\n          const URLParams = new URLSearchParams(new URL(url).search);\n          this.setState((prevState) => ({\n            trailerURL: URLParams.get(\"v\"),\n          }));\n        })\n        .catch((error) =>\n          this.showDisplay(\"Movie trailer currently not available\", true)\n        );\n    }\n  };\n  componentDidMount() {\n    //apicall(213).then((res) => this.setState({ banners: res[\"results\"] }));\n    //apicall(453).then((res) => console.log(res));\n  }\n  render() {\n    const { banners } = this.state;\n    const { banner } = this.props.location.state;\n    const features = banner.slice(1, 8);\n    const bannerDisplay = Math.floor(Math.random() * (banner.length - 1) + 1);\n    const details = this.trunDetails(banner[bannerDisplay]?.overview);\n    const { currentuser } = this.props;\n    if (!currentuser) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"mainApp\">\n        <Nav />\n        <Banner\n          banners={banner}\n          bannerDisplay={bannerDisplay}\n          details={details}\n        />\n        <h1 className=\"titleHeader\">NetFlix Originals</h1>\n        <MoviesList category={213} />\n        <h1 className=\"titleHeader\">Hulu Originals</h1>\n        <MoviesList category={453} />\n        <h1 className=\"titleHeader\">Disney+ Originals</h1>\n        <MoviesList category={2739} />\n        <h1 className=\"featureHeader\">Features</h1>\n        <div className=\"featureMovie\">\n          {features.map((feature, index) => (\n            <div\n              key={index}\n              className=\"featureItem\"\n              onMouseEnter={this.playOnMouseOver}\n            >\n              <img\n                src={`${baseURL}${feature.poster_path}`}\n                alt={feature.name}\n              />\n            </div>\n          ))}\n        </div>\n        <h1 className=\"titleHeader\">HBOmax Originals</h1>\n        <MoviesList category={3186} />\n        <h1 className=\"titleHeader\">Peacock Shows</h1>\n        <MoviesList category={3353} />\n        <h1 className=\"titleHeader\">ESPN Originals</h1>\n        <MoviesList category={29} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentuser: state.loggedin,\n  };\n};\n\nexport default connect(mapStateToProps)(Home);\n"],"sourceRoot":""}